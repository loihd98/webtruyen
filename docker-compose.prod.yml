services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=webtruyen_prod
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=your_strong_password_here
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./uploads:/uploads
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:your_strong_password_here@postgres:5432/webtruyen_prod
      - JWT_SECRET=your_jwt_secret_here_minimum_32_characters
      - JWT_REFRESH_SECRET=your_jwt_refresh_secret_here_minimum_32_characters
      - FRONTEND_URL=https://vuaxemohinh.com
      - PORT=5000
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_OPTIONS=--max-old-space-size=2048
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://vuaxemohinh.com/api
      - NEXT_PUBLIC_FRONTEND_URL=https://vuaxemohinh.com
      - NODE_OPTIONS=--max-old-space-size=1024
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          memory: 1G
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./uploads:/uploads:ro
      - ./ssl:/etc/nginx/ssl:ro
      - certbot-web:/var/www/certbot:ro
      - certbot-certs:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - backend
    deploy:
      resources:
        limits:
          memory: 128M
    networks:
      - app-network

  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot-web:/var/www/certbot:rw
      - certbot-certs:/etc/letsencrypt:rw

volumes:
  postgres_data:
  certbot-web:
  certbot-certs:

networks:
  app-network:
    driver: bridge
