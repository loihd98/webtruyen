services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.prod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d web_truyen"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    restart: unless-stopped
    volumes:
      - ./uploads:/uploads
    env_file:
      - .env.prod
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "src/scripts/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_OPTIONS=--max-old-space-size=2048
        - NODE_ENV=production
        - NEXT_PUBLIC_API_URL=https://khotruyen.vn/api
        - NEXT_PUBLIC_BASE_URL=https://khotruyen.vn
        - NEXT_PUBLIC_MEDIA_URL=https://khotruyen.vn
    restart: unless-stopped
    env_file:
      - .env.prod
    environment:
      - NODE_OPTIONS=--max-old-space-size=1024
      - PORT=3000
    depends_on:
      backend:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/temp-http.conf:/etc/nginx/conf.d/default.conf:ro
      - ./uploads:/uploads:ro
      - ./logs/nginx:/var/log/nginx
      - certbot-web:/var/www/certbot:ro
      - certbot-certs:/etc/letsencrypt:ro
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_healthy
    environment:
      - DOMAIN=khotruyen.vn
    deploy:
      resources:
        limits:
          memory: 128M
    networks:
      - app-network

  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot-web:/var/www/certbot:rw
      - certbot-certs:/etc/letsencrypt:rw
    networks:
      - app-network

volumes:
  postgres_data:
  certbot-web:
  certbot-certs:

networks:
  app-network:
    driver: bridge
